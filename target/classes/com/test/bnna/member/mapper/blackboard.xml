<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="blackboard">
	
	<select id="get" parameterType="String" resultType="blackboarddto">
		select
			bb.*,
			(select id from tblMember where seq = bb.seqMember) as id,
			(select name from tblMember where seq = bb.seqMember) as name,
			(select id from tblMember where seq = bb.seqIssueMember) as issueMemberId,
			(select name from tblMember where seq = bb.seqIssueMember) as issueMemberName
		from tblBlackBoard bb
			where seq = #{seq}
	</select>
	
	<select id="getImages" parameterType="String" resultType="blackboardimgdto">
		select * from tblBlackBoardImg where seqBlackBoard = #{seq}
	</select>
	
	<select id="getComments" parameterType="String" resultType="blackboardcmtdto">
		select bbc.*, (select id from tblMember where seq = bbc.seqMember) as id, (select name from tblMember where seq = bbc.seqMember) as name from tblBlackBoardCmt bbc where seqBlackBoard = #{seq}
	</select>
	
	<!-- 21.03.17 추가분 -->

	<select id="getThread" resultType="Integer">
		select nvl(max(thread), 0) + 1000 as thread from tblBlackBoard
	</select>

	
	<update id="updateThread" parameterType="map">
		update tblBlackBoard set thread = thread - 1 where thread <![CDATA[<]]> #{parentThread} and thread <![CDATA[>]]> #{previousThread}
	</update>
	
	<insert id="addok" parameterType="blackboarddto">
		insert into tblBlackBoard(seq, seqMember, seqIssueMember, title, content, readcnt, regdate, thread, depth, seqParent) 
			values(seqBlackBoard.nextVal, #{seqMember}, #{seqIssueMember}, #{title}, #{content}, default, default, #{thread}, #{depth}, #{seqParent})
	</insert>
	
	<select id="getAddSeq" resultType="String">
		select max(seq) as seq from tblBlackBoard 
	</select>
	
	<delete id="del" parameterType="String">
		delete from tblBlackBoard where seq = #{addSeqBlackBoard}
	</delete>
	
	<select id="list" parameterType="map" resultType="blackboarddto">
	<!-- select * from (select a.*, rownum as rnum from (select veb.* from viewEBook veb) a) where rnum between "begin" and "end" -->
		
		<choose>
		
			<when test="keyword != null and !keyword.equals('')">
				select * from
						(select b.*, rownum as rnum from
													(select a.* from
																(select bb.*, (select id from tblMember where seq = bb.seqMember) as id, (select name from tblMember where seq = bb.seqMember) as name from tblBlackBoard bb order by bb.thread desc) a
													where ${condition} like '%'||#{keyword}||'%') b)
				where rnum between #{begin} and #{end} 
			</when>
			
			<otherwise>
				select * from (select a.*, rownum as rnum from (select bb.*, (select id from tblMember where seq = bb.seqMember) as id, (select name from tblMember where seq = bb.seqMember) as name from tblBlackBoard bb order by bb.thread desc) a) where rnum between #{begin} and #{end}
			</otherwise>
		
		</choose>
		
	</select>
	
	<select id="getCount" parameterType="map" resultType="Integer">
		
		
		<choose>
			
			<when test="keyword != null and !keyword.equals('')">
				select count(*) from (select bb.*, (select id from tblMember where seq = bb.seqMember) as id, (select name from tblMember where seq = bb.seqMember) as name from tblBlackBoard bb) where ${condition} like '%'||#{keyword}||'%'
			</when>
			
			<otherwise>			
				select count(*) from tblBlackBoard
			</otherwise>
		
		</choose>
		
	</select>
	
	<select id="getSeqHasImage" resultType="String">
		select distinct seqBlackBoard from tblBlackBoardImg
	</select>
	
	<update id="updateReadCnt" parameterType="String">
		update tblBlackBoard set readcnt = readcnt + 1 where seq = #{seq}
	</update>
	
	<select id="hasReply" parameterType="String" resultType="Integer">
		select count(*) from tblBlackBoard where seqParent = #{seq}
	</select>
	
	<select id="hasComment" parameterType="String" resultType="Integer">
		select count(*) from tblBlackBoardCmt where seqBlackBoard = #{seq}
	</select>
	
	<update id="editok" parameterType="blackboarddto">
		update tblBlackBoard set
			seqIssueMember = #{seqIssueMember},
			title = #{title},
			content = #{content}
		where seq = #{seq}
	</update>

</mapper>
